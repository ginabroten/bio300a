---
title: "Lakselus og Infeksiøs lakseanemi (ILA)"
format: html
editor: visual
---

## Grafisk fremstilling av forekomst av ILA og tiltak for fjerning av lakselus

```{r}
#| label: setup of needed packagea
#| message: false
library(tidyverse)
library(readr)
library(dplyr)
library(tidyr)
library(gt)

```

### Grafisk fremstilling av forekomsten av ILA per produksjonsområde

```{r}
#| label: lager graf for ila
#| message: false

ila_import <- read_delim("ila_pd.csv", delim = ";") #importerer ila-data 

ila_sorted <- ila_import |> 
  filter(Sykdom == "ILA") #sorterer slik at vi kun får data om ila


ila_sorted$ProduksjonsområdeId <- factor(ila_sorted$ProduksjonsområdeId, levels = 1:12) #konverterer til faktorer, ettersom fra produksjonsområdene er det ikke rapportert noe fra 1

ila_clean <- ila_sorted[!is.na(ila_sorted$ProduksjonsområdeId), ] #fjerner NA-verdier


ila_clean |> 
  ggplot(aes(x = ProduksjonsområdeId, fill = Status)) + 
  geom_bar(position = "stack") +
  scale_x_discrete(drop = FALSE, expand = expansion(mult = c(0, 0))) +  
  labs(x = "Produksjonsområde ID", y = "Antall rapporterte tilfeller pr. fisk", fill = "Status") +
  theme_minimal()

```

### Grafisk fremstilling av tiltak for fjerning av lakselus per produksjonsområde

```{r}
#| label: graf av lakselus
#| message: false
#datene er konvertert til csv og importert med read_delim
lakselus <- read_delim("tiltak_mot_lakselus.csv", delim = ",")

lakselus$ProduksjonsområdeId <- factor(lakselus$ProduksjonsområdeId, levels = 1:12)

lakselus_clean <- lakselus |> 
  filter(!is.na(ProduksjonsområdeId), !is.na(Tiltak)) #filtrerer ut NA

#plotter fragen
lakselus_clean |> 
  ggplot(aes(x = ProduksjonsområdeId, fill = Tiltak)) + 
  geom_bar(position = "stack") +
  scale_x_discrete(drop = FALSE, expand = expansion(mult = c(0, 0))) +  
  labs(x = "Produksjonsområde ID", y = "Antall tiltak pr. fisk", fill = "Tiltak") +
  theme_minimal()


```

## Kombinert data

Prøver å kombinere de to datasettene for å få grafene på siden av hverandre - for å enklere kunne se korrelasjonen.

```{r}
#| label: grafene stilles opp mot hverandre
#| message: false


ila_data <- ila_clean |> 
  select(ProduksjonsområdeId, Status)

lakselus_data <- lakselus_clean |> 
  select(ProduksjonsområdeId, Tiltak) #nye datarammer

ila_data <- ila_data |> 
  mutate(Type = "Status for ILA", Combined = paste("Status - ", Status))  

lakselus_data <- lakselus_data |> 
  mutate(Type = "Tiltak mot lakselus", Combined = paste("Tiltak - ", Tiltak))  


combined_data <- bind_rows(ila_data, lakselus_data)


combined_graph <- combined_data |> 
  ggplot(aes(x = ProduksjonsområdeId, fill = Combined)) + 
  geom_bar(position = "stack") +
  scale_x_discrete(drop = FALSE, expand = expansion(mult = c(0, 0))) +  
  labs(x = "Produksjonsområde ID", y = "Antall rapporterte tilfeller / tiltak", fill = "Kategori") +
  theme_minimal() +
  facet_wrap(~ Type, scales = "free_y") +  
  theme(strip.text = element_text(size = 14, face = "bold"))  

# Vis grafen
print(combined_graph)

```

### Tabell som viser antall tiltak for å fjerne lakselus per produksjonsområdeID

```{r}
#| label: lager tabell for lakselus
#| message: false

lakselus_summary <- lakselus_clean |> 
  group_by(ProduksjonsområdeId, Tiltak) |> 
  summarise(Antall = n(), .groups = "drop") |> 
  complete(ProduksjonsområdeId = factor(1:12), Tiltak, fill = list(Antall = 0))

lakselus_wider <- lakselus_summary |> 
  pivot_wider(names_from = Tiltak, values_from = Antall, values_fill = 0)


lakselus_wider |> 
  gt() |> 
  tab_header(
    title = "Antall tiltak for å fjerne lakselus per produksjonsområdeID"
  ) |> 
  cols_label(
    ProduksjonsområdeId = "Produksjonsområde ID",            
    `mekanisk fjerning` = "Mekanisk fjerning",               
    medikamentell = "Medikamentell fjerning",                
    rensefisk = "Fjerning med rensefisk" )

```

### Tabell som viser de ulike rapportere statusene av ILA per produksjonsområde

```{r}
#| label:  lager tabell med ila per produksjonsområde
#| message: false

ila_summary <- ila_sorted |> 
  group_by(ProduksjonsområdeId, Status) |> 
  summarise(Antall = n(), .groups = "drop") |> 
  complete(ProduksjonsområdeId = factor(1:12), Status, fill = list(Antall = 0))



ila_pivot <- ila_summary |> 
  pivot_wider(names_from = Status, values_from = Antall, values_fill = 0)

ila_pivot |> 
  gt() |> 
  tab_header(
    title = "Antall rapporterte tilfeller av infeksiøs lakseanemi (ILA) per produksjonsområde ID"
  ) |> 
  cols_label(
    ProduksjonsområdeId = "ProduksjonsområdeID",
    Påvist = "Påvist ILA",
    Mistanke = "Mistanke om ILA",
    Avsluttet = "Asluttet behandling av ILA"
  )
```

### Antall unike lokalitetsnumre per produksjonsområde per datasett

```{r}
#| label: finner unike lokalitesnumre
#| message: false

# Telle antall unike lokalitetsnumre per produksjonsområde
ant_lokalitetsnummerila <- ila_sorted |> 
  group_by(ProduksjonsområdeId) |> 
  summarise(AntallLokaliteter = n_distinct(Lokalitetsnummer)) |> 
  arrange(ProduksjonsområdeId)

total_sum_locations_ila <- sum(ant_lokalitetsnummerila$AntallLokaliteter, na.rm = TRUE) #sum unike lokalitetsnumre

#i ila-datasettet eksisrerer det to påvist/avsluttet som ikke er knyttet til et produksjonsområd. Jeg velger å ikke bruke disse da de ikke er tilknyttet produksjonsområdeID


ant_lokalitetsnummerlakselus <- lakselus_clean |> 
  group_by(ProduksjonsområdeId) |> 
  summarise(AntallLokaliteter = n_distinct(Lokalitetsnummer)) |> 
  arrange(ProduksjonsområdeId)


total_sum_locations_lakselus <- sum(ant_lokalitetsnummerlakselus$AntallLokaliteter, na.rm = TRUE) #sum unike lokalitetsnumre

```

For begge tabellene hadde det vært interessant å regnet ut antall tilfeller av ILA totalt, delt på antall tilfeller i hver produksjonsområde opp mot antall unike lokalitetsnumre? Videre gjøre noe av det samme med å dele antall påviste tilfeller av lakselus og dele opp mot antall per produksjonsområde

### Regner ut totalt antall tilfeller på lakselus datasett

```{r}
#| label: regner ut prosentvis informasjon opp mot lokalitetsnumre lakselus
#| message: false
sum_fjerning <- lakselus_summary |> 
  summarise(total_fjerning = sum(Antall)) #sum totale tiltak

sum_fjerning_pr_id <- lakselus_summary |> 
  group_by(ProduksjonsområdeId) |> 
  summarise(total_fjerning_pr_id = sum(Antall), .groups = "drop")  #summering av tiltak per produksjonsområde ID


total_fjerning <- sum_fjerning_pr_id |> 
  mutate(percentage = (total_fjerning_pr_id / sum_fjerning$total_fjerning) * 100)  #prosentberegning

total_fjerning_with_lokaliteter <- total_fjerning |> 
  left_join(ant_lokalitetsnummerlakselus, by = "ProduksjonsområdeId")

total_fjerning_with_lokaliteter |> 
  gt() |> 
   tab_header(
    title = "Antalle tiltak  per produksjonsområde ID og antall lokaliteter per produksjonsområde ID"
  ) |> 
  cols_label(
    ProduksjonsområdeId = "Produksjonsområde ID",
    total_fjerning_pr_id = "Antall tiltak",
    percentage = "Prosent tiltak ",
    AntallLokaliteter = "Antall lokaliteter i produksjonsområde"
  )
```

### Regner ut prosentvis frekvens i ILA datasett

```{r}
#| label: regner ut prosentvis informasjon opp mot lokalitetsnumre ila
#| message: false
#| 
# Summere totale positive statuser
sum_positiv <- ila_pivot |> 
  summarise(total_positiv = sum(Påvist))


#sum av toale positve per produksjonsområde
sum_positiv_pr_id <- ila_sorted |> 
  group_by(ProduksjonsområdeId) |> 
  summarise(total_positiv_pr_id =  sum(Status == "Påvist"), .groups = "drop")

# Beregn prosentandel av positive statuser per produksjonsområde
total_positiv <- sum_positiv_pr_id |> 
  mutate(percentage = (total_positiv_pr_id / sum_positiv$total_positiv) * 100)

total_positiv_med_lokaliteter <- total_positiv |> 
  left_join(ant_lokalitetsnummerila, by = "ProduksjonsområdeId") |> 
  drop_na()

total_positiv_med_lokaliteter |> 
  gt() |> 
  tab_header(
    title = "Antalle påviste tilfeller per produksjonsområde ID og antall lokaliteter per produksjonsområde ID"
  ) |> 
  cols_label(
    ProduksjonsområdeId = "Produksjonsområde ID",
    total_positiv_pr_id = "Antall påviste tilfeller med ILA",
    percentage = "Prosent tilfeller med ILA ",
    AntallLokaliteter = "Antall lokaliteter i produksjonsområde"
  )
            
```

## Kombinert data

```{r}
#| label: antall tilfeller av ila og metoder for å fjerne ila per produksjonsid
#| message: false


combined_data <- total_fjerning_with_lokaliteter |> 
  full_join(total_positiv_med_lokaliteter, by = "ProduksjonsområdeId") #kombinerer datasettene


combined_data |> 
  gt() |> 
  tab_header(
    title = "Number of cases of ILA and efforts to remove salmonlice per production ID"
  ) |> 
  cols_label(
    ProduksjonsområdeId = "Production area ID",
    total_fjerning_pr_id = "Number of efforts made for salmon lice",
    percentage.x = "% of efforts",
    AntallLokaliteter.x = "Number of uniqe locations (salmon lice)",
    total_positiv_pr_id = "Number of positive cases of ILA",
    percentage.y = "% cases ofILA",
    AntallLokaliteter.y = "Number of unique locations (ILA)"
  )

```

```{r}
#| label: tabell med de unike lokalsjonsnumrene per produksjonsområde id
#| message: false
lokalitetsnummer_joined <- ant_lokalitetsnummerlakselus |> 
  left_join(ant_lokalitetsnummerila, by ="ProduksjonsområdeId")


lokalitetsnummer_joined |> 
  gt() |> 
  tab_header(
    title = "Number of uniqe localites per production area"
  ) |> 
  cols_label(
    ProduksjonsområdeId = "Production area ID",
    AntallLokaliteter.x = "Number of uniqe localities in the lice-dataset",
    AntallLokaliteter.y = "Number of unique localiteis in the ILA-dataset"
  )
```

```{r}
#| label: prosentvis andel av de ulike metodene for fjerning av lakselus
#| message: false

prosent_lakselus <- lakselus_wider |> 
  left_join(sum_fjerning_pr_id, by = "ProduksjonsområdeId")

prosentvis_lakselus <- prosent_lakselus |> 
  mutate(medikamentell = (medikamentell / total_fjerning_pr_id) * 100) |> 
  mutate(`mekanisk fjerning` = (`mekanisk fjerning` / total_fjerning_pr_id) * 100) |> 
  mutate(rensefisk = (rensefisk / total_fjerning_pr_id) * 100)  
 


prosentvis_lakselus |> 
  gt() |> 
  tab_header(
    title = "Percentage of the different methos used to remove salmonlice"
  )


  
```

```{r}
#| label: prosentvis andel av de ulike metodene for fjerning av lakselus pluss ila data, og antall unike lokasjoner
#| message: false


prosentfordeling <- prosentvis_lakselus |> 
  left_join(total_positiv_med_lokaliteter, by = "ProduksjonsområdeId")



prosentfordeling |> 
  mutate(positiv_pr_uniklokasjon = (AntallLokaliteter / total_positiv_pr_id ) * 100) 
#syns ved kun legge til de positive ikke gir et godt bilde - min ide er å dele antallet positive på antall lokasjoner? kansje det kan gi et bedre bilde? 


prosentfordeling |> 
  gt() |> 
  tab_header(
    title = "Percentage of the different methods to remove salmon louse and the prevalence of ISA per production area ID and location"
  ) |> 
  cols_label(
    ProduksjonsområdeId = "Production ID",
    medikamentell = "% medicinal removal",
    `mekanisk fjerning` = "% mechanical removal",
    rensefisk = "% cleaner fish",
    total_fjerning_pr_id = "Number of removals",
    total_positiv_pr_id = "Positive cases of ISA",
    percentage = "% of ISA",
    AntallLokaliteter = "Uniqe locations"
  )


```

```{r}
#| label: prosentvis andel av isa per lokasjonsid
#| message: false

ila_lokasjon <- ila_sorted |> 
  group_by(Lokalitetsnummer) |> 
  filter(Status == "Påvist") |> 
  summarise(Antall = n())


ila_positive <- ila_lokasjon |> 
  summarise(sum_positive = sum(Antall)) #summere totale positive totalt


total_positive <- ila_positive$sum_positive #tekker ut verdien av `sum_positive` som en enkelt verdi

farm_rate <- ila_lokasjon |> 
  mutate(per_farmrate = (Antall / total_positive) * 100) #per farm anemia
```

## Statistiske tester

```{r}
#| label: korrelasjonsanalyse for de ulike metodene for fjerning og ila
#| message: false

#tester Pearson correlation test for å se om det er en korrelasjon mellom de tre forskjellige metodene for fjerning av lakselus og ila


clean_data <- prosentfordeling %>% filter(!is.na(percentage)) #fjerner tomme rader, her vil det ikke være en korrelasjon


methods <- c("medikamentell", "mekanisk fjerning", "rensefisk") #pearson correlation test

for (method in methods) {
  result <- cor.test(clean_data[[method]], clean_data$percentage)
  cat("Correlation between", method, "and % ISA:\n")
  cat("Correlation coefficient:", result$estimate, "\n")
  cat("P-value:", result$p.value, "\n\n")
}

```

Det er ingen korrelasjon mellom de ulike metodene som er signifikant, det eneste som kan nevnes er at medikamentell fjerning er svakt positiv - men ikke statisitisk signifikant. Men interessant.

For å regne ut proportions for fordelingen må vi vite at: The sample is randomly selected There is only two options: Being in the category Not being in the category The sample needs at least: 5 members in the category 5 members not in the category

```{r}
#| label: proposjoner og p-verdi for ila datasett
#| message: false

#punktestimat for ila

total_locations = 1758 #hentet fra barentswatch
confidence_level = 0.95
alpha = 1- confidence_level
critical_z_ila = qnorm(1-alpha/2)

ila_proportion = (total_sum_locations_ila/total_locations)

lakselus_proportion = (total_sum_locations_lakselus/total_locations)

std_err_ila = critical_z_ila * (sqrt(ila_proportion*(1-ila_proportion)/total_locations))

margin_of_err_ila = critical_z_ila * std_err_ila

lower_bound_ila = ila_proportion - margin_of_err_ila
upper_bound_ila = ila_proportion + margin_of_err_ila

```

## Test av lakselus pr uke datasett for å finne ut antall anlegg

```{r}
#| label: henter ut alle datasett totalt
#| message: false
lakselus_pr_uke <- read_delim("lakselus_per_fisk.csv", delim = ",")

lakselus_pr_uke_sortert <- lakselus_pr_uke |> 
  group_by(ProduksjonsområdeId) |> 
  summarise(AntallAnlegg = n_distinct(Lokalitetsnummer)) |> 
   drop_na()

lakselus_pr_uke_sortert$ProduksjonsområdeId <- as.factor(lakselus_pr_uke_sortert$ProduksjonsområdeId)

total_localities_all <- lakselus_pr_uke_sortert |> 
  left_join(lokalitetsnummer_joined, by = "ProduksjonsområdeId") |> 
  filter(ProduksjonsområdeId != 13) #driter i rad 13


```

## Proposjoner!!!

```{r}
#| label: regner ut proposjoner og får det i en tabell
#| message: false
proposjoner <- lakselus_pr_uke_sortert |> 
  left_join(sum_positiv_pr_id, by = "ProduksjonsområdeId") |> 
  left_join(sum_fjerning_pr_id, by = "ProduksjonsområdeId") |> 
  filter(ProduksjonsområdeId != 13) #driter i rad 13


propsjoner_gjennomsnitt <- proposjoner |> 
  mutate(gjsnit_positiv_pranlegg = (total_positiv_pr_id /AntallAnlegg)) |> 
  mutate(gjsnit_fjerning_pranlegg = (total_fjerning_pr_id /AntallAnlegg)) 


lakselus_proposjoner <- lakselus_wider |> 
  mutate(medikamentell_pr_anlegg = (medikamentell / proposjoner$AntallAnlegg)) |> 
  mutate(mekanisk_pr_anlegg = (`mekanisk fjerning` /proposjoner$AntallAnlegg)) |> 
  mutate(rensefisk_pr_anlegg = (rensefisk / proposjoner$AntallAnlegg))


lakselus_proposjoner_ila <- lakselus_proposjoner |> 
  left_join(sum_positiv_pr_id, by = "ProduksjonsområdeId")

lakselus_proposjoner_alt <- lakselus_proposjoner_ila |> 
  mutate(gjsnit_positiv_pranlegger = (total_positiv_pr_id /propsjoner_gjennomsnitt$AntallAnlegg))


lakselus_proposjoner_alt |> 
  gt() |> 
  cols_label(
    ProduksjonsområdeId = "Area ID",
    medikamentell = "Medicinal",
    `mekanisk fjerning` = "Mechanical",
    rensefisk = "Cleaner fish",
    medikamentell_pr_anlegg = "Medicnal per farm",
    mekanisk_pr_anlegg = "Mechanical per farm",
    rensefisk_pr_anlegg = "Cleaner fish per farm",
    total_positiv_pr_id = "ISA positive",
    gjsnit_positiv_pranlegger ="ISA positive per farm"
  )


```

```{r}
#| label: plotter proposjoner
#| message: false
#plotter propsjonene

ggplot(data = propsjoner_gjennomsnitt, aes(x = ProduksjonsområdeId, y = gjsnit_positiv_pranlegg)) +
  geom_col() + #(fill = viridis(1, option = "D")) 
  theme_minimal()+
  labs(title = "Mean positive cases of ISA per fish farm",
       x = "Production ID",
       y = "Mean positive cases of ISA")

ggplot(data = propsjoner_gjennomsnitt, aes(x = ProduksjonsområdeId, y = gjsnit_fjerning_pranlegg)) +
  geom_col () + #(fill = viridis(1, option = "C")) +
  theme_minimal() + labs(title = "Mean efforts to remove salmon lice per fish farm",
       x = "Production ID",
       y = "Mean efforts made per farm")



```

```{r}
#| label: korrelasjon proposjoner mellom antall fjerninger og positive prøver
#| message: false


# Beregne Pearson korrelasjon mellom totalt antall fjerninger og positive prøver
cor_test_fjerning_vs_positiv <- cor.test(
  propsjoner_gjennomsnitt$total_positiv_pr_id, 
  propsjoner_gjennomsnitt$total_fjerning_pr_id, 
  method = "pearson"
)

# Skriv ut resultatet av korrelasjonstesten
print(cor_test_fjerning_vs_positiv)


```

```{r}
#| label: ggplot for de tre tiltakene
#| message: false
#lager ggplot som viser de tre tilakene

ggplot(data = lakselus_proposjoner, aes(x = ProduksjonsområdeId, y = medikamentell_pr_anlegg))+
  geom_col()


ggplot(data = lakselus_proposjoner, aes(x = ProduksjonsområdeId, y = rensefisk_pr_anlegg))+
  geom_col()

ggplot(data = lakselus_proposjoner, aes(x = ProduksjonsområdeId, y = mekanisk_pr_anlegg))+
  geom_col()
```

```{r}

#| label: de tre tiltakene i en graf
#| message: false

# Restructure data to long format
lakselus_long <- lakselus_proposjoner |>  
  pivot_longer(cols = c(medikamentell_pr_anlegg, rensefisk_pr_anlegg, mekanisk_pr_anlegg), 
               names_to = "Tiltak", 
               values_to = "Verdi")

# Rename and mutate the 'lakselus_long' data frame
lakselus_english <- lakselus_long |> 
  rename(`Method of removal` = Tiltak) |> 
  mutate(
    `Method of removal` = case_when(
      `Method of removal` %in% c("medikamentell_pr_anlegg") ~ "Medicinal", 
      `Method of removal` %in% c("mekanisk_pr_anlegg") ~ "Mechanical",
      `Method of removal` %in% c("rensefisk_pr_anlegg") ~ "Cleaner fish",
      TRUE ~ `Method of removal`  # Ensure consistent use of backticks
    )
  )

# Create ggplot with facet_wrap by ProduksjonsområdeId
ggplot(data = lakselus_english, aes(x = ProduksjonsområdeId, y = Verdi, fill = `Method of removal`)) +  # Corrected backticks
  geom_col(position = "dodge") +  # Side by side bars
  facet_wrap(~ `Method of removal`, scales = "free_y") +  # Facet based on 'Method of removal'
  labs(x = "Production Id", y = "Efforts per fish farm", fill = "Efforts") +
  theme_minimal()




```

```{r}
#| label: korrelasjon proposjoner mellom tiltakene og positive prøver
#| message: false
#| 
kor_test_medikamentell <- cor.test(lakselus_proposjoner_ila$total_positiv_pr_id, lakselus_proposjoner_ila$medikamentell_pr_anlegg)
print(kor_test_medikamentell)

# Korrelasjonstest med total_positiv_pr_id for mekanisk_pr_anlegg
kor_test_mekanisk <- cor.test(lakselus_proposjoner_ila$total_positiv_pr_id, lakselus_proposjoner_ila$mekanisk_pr_anlegg)
print(kor_test_mekanisk)

# Korrelasjonstest med total_positiv_pr_id for rensefisk_pr_anlegg
kor_test_rensefisk <- cor.test(lakselus_proposjoner_ila$total_positiv_pr_id, lakselus_proposjoner_ila$rensefisk_pr_anlegg)
print(kor_test_rensefisk)
```




```{r fig.width=50, fig.height=25}
# Kombiner data
combined_data <- propsjoner_gjennomsnitt |> 
  select(ProduksjonsområdeId, gjsnit_positiv_pranlegg, gjsnit_fjerning_pranlegg) |> 
  left_join(lakselus_proposjoner |> 
              select(ProduksjonsområdeId, medikamentell_pr_anlegg, mekanisk_pr_anlegg, rensefisk_pr_anlegg),
            by = "ProduksjonsområdeId") 

# Pivot data for facet wrapping
combined_long <- combined_data |> 
  pivot_longer(cols = c(gjsnit_positiv_pranlegg, gjsnit_fjerning_pranlegg, 
                        medikamentell_pr_anlegg, mekanisk_pr_anlegg, rensefisk_pr_anlegg), 
               names_to = "Tiltak", 
               values_to = "Verdi")

# Gi mer forståelige navn til variablene
combined_long <- combined_long |> 
  mutate(
    Tiltak = case_when(
      Tiltak == "gjsnit_positiv_pranlegg" ~ "Mean positive ISA cases",
      Tiltak == "gjsnit_fjerning_pranlegg" ~ "Mean salmon lice removal efforts",
      Tiltak == "medikamentell_pr_anlegg" ~ "Mean medicinal efforts",
      Tiltak == "mekanisk_pr_anlegg" ~ "Mean mechanical efforts",
      Tiltak == "rensefisk_pr_anlegg" ~ "Mean cleaner fish efforts",
      TRUE ~ Tiltak
    )
  )

# Plot med facet_wrap basert på 'Tiltak'
ggplot(data = combined_long, aes(x = ProduksjonsområdeId, y = Verdi, fill = Tiltak)) +
  geom_col(position = "dodge") +  # Side-by-side bars
  facet_wrap(~ Tiltak, scales = "free_y") +  # Facet basert på type tiltak
  labs(
       x = "Production Area ID",
       y = "Efforts / Cases",
       fill = "Type of Effort") +
  theme_minimal() +
  scale_fill_viridis_d()+
 theme(
    plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),  # Larger title text
    axis.title.x = element_text(size = 16),  # Larger x-axis label
    axis.title.y = element_text(size = 16),  # Larger y-axis label
    axis.text.x = element_text(angle = 45, hjust = 1, size = 14),  # Larger x-axis text with rotation
    axis.text.y = element_text(size = 14),  # Larger y-axis text
    legend.position = "bottom",  # Move legend to the bottom
    legend.text = element_text(size = 16),  # Increase legend text size
    legend.title = element_text(size = 18, face = "bold"),  # Larger legend title
    legend.key.size = unit(2, "cm"),  # Increase size of legend keys
    legend.spacing.x = unit(1, 'cm'),  # Add more space between legend items
    strip.text = element_text(size = 18, face = "bold")  # Larger facet labels
  )



```
```{r}
# Kombiner data
combined_data <- propsjoner_gjennomsnitt |> 
  select(ProduksjonsområdeId, gjsnit_positiv_pranlegg, gjsnit_fjerning_pranlegg) |> 
  left_join(lakselus_proposjoner |> 
              select(ProduksjonsområdeId, medikamentell_pr_anlegg, mekanisk_pr_anlegg, rensefisk_pr_anlegg),
            by = "ProduksjonsområdeId") 

# Pivot data for facet wrapping
combined_long <- combined_data |> 
  pivot_longer(cols = c(gjsnit_positiv_pranlegg, gjsnit_fjerning_pranlegg, 
                        medikamentell_pr_anlegg, mekanisk_pr_anlegg, rensefisk_pr_anlegg), 
               names_to = "Tiltak", 
               values_to = "Verdi")

# Gi mer forståelige og kortere navn til variablene
combined_long <- combined_long |> 
  mutate(
    Tiltak = case_when(
      Tiltak == "gjsnit_positiv_pranlegg" ~ "ISA cases",
      Tiltak == "gjsnit_fjerning_pranlegg" ~ "Lice removal",
      Tiltak == "medikamentell_pr_anlegg" ~ "Medicinal",
      Tiltak == "mekanisk_pr_anlegg" ~ "Mechanical",
      Tiltak == "rensefisk_pr_anlegg" ~ "Cleaner fish",
      TRUE ~ Tiltak
    )
  )

# Plot med facet_wrap basert på 'Tiltak'
ggplot(data = combined_long, aes(x = ProduksjonsområdeId, y = Verdi, fill = Tiltak)) +
  geom_col(position = "dodge") +  # Side-by-side bars
  facet_wrap(~ Tiltak, scales = "free_y", ncol = 2) +  # Fasett med to kolonner
  labs(
       x = "Area ID",
       y = "Efforts / Cases pr. farm",
       fill = "Type of Effort/occurence") +
  theme_minimal() +
  scale_fill_viridis_d() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),  # Større titteltekst
    axis.title.x = element_text(size = 16),  # Større etikett for x-akse
    axis.title.y = element_text(size = 16),  # Større etikett for y-akse
    axis.text.x = element_text(angle = 45, hjust = 1, size = 14),  # Rotert og større tekst for x-akse
    axis.text.y = element_text(size = 14),  # Større tekst for y-akse
    legend.position = "bottom",  # Legg legenden nederst
    legend.text = element_text(size = 16),  # Større tekst for legendepunkter
    legend.title = element_text(size = 18, face = "bold"),  # Større og fet tittel i legenden
    legend.key.size = unit(2, "cm"),  # Større legendenøkler
    legend.spacing.x = unit(1, 'cm'),  # Mer plass mellom legendepunkter
    strip.text = element_text(size = 20, face = "bold"),  # Større og fet tekst for fasetter
    panel.spacing = unit(2, "lines")  # Øker avstanden mellom fasetter for mer klarhet
  )


```

